AWSTemplateFormatVersion: 2010-09-09
Description: >-
  fluent_aws
Transform:
- AWS::Serverless-2016-10-31

# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  getAllListsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-all-lists.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ListsTable
      Environment:
        Variables:
          LISTS_TABLE: !Ref ListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: GET
  getListByIdFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-list-by-id.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ListsTable
      Environment:
        Variables:
          LISTS_TABLE: !Ref ListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /{listId}
            Method: GET
  deleteListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/delete-list.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ListsTable
      Environment:
        Variables:
          LISTS_TABLE: !Ref ListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: DELETE
  createNewListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-new-list.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ListsTable
      Environment:
        Variables:
          LISTS_TABLE: !Ref ListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: POST
  updateListFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-list.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref ListsTable
      Environment:
        Variables:
          LISTS_TABLE: !Ref ListsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /
            Method: PUT
  translateFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/translate.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Events:
        Api:
          Type: Api
          Properties:
            Path: /translate
            Method: GET
  createSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/create-settings.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SettingsTable
      Environment:
        Variables:
          SETTINGS_TABLE: !Ref SettingsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /settings
            Method: POST
  updateSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/update-settings.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SettingsTable
      Environment:
        Variables:
          SETTINGS_TABLE: !Ref SettingsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /settings
            Method: PUT
  getSettingsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/get-settings.handler
      Runtime: nodejs20.x
      Architectures:
      - x86_64
      MemorySize: 128
      Timeout: 100
      Policies:
      - DynamoDBCrudPolicy:
          TableName: !Ref SettingsTable
      Environment:
        Variables:
          SETTINGS_TABLE: !Ref SettingsTable
      Events:
        Api:
          Type: Api
          Properties:
            Path: /settings
            Method: GET
  ListsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "userId"
          AttributeType: "S"
        -
          AttributeName: "createdAt"
          AttributeType: "N"
      KeySchema:
        -
          AttributeName: "userId"
          KeyType: "HASH"
        -
          AttributeName: "createdAt"
          KeyType: "RANGE"

      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  SettingsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "userId"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "userId"
          KeyType: "HASH"

      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    LoggingConfig:
      LogFormat: JSON
  Api:
    Cors:
      AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'*'"
